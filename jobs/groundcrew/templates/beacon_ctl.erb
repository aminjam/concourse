#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/groundcrew
LOG_DIR=/var/vcap/sys/log/groundcrew
PIDFILE=$RUN_DIR/beacon.pid

source /var/vcap/packages/pid_utils/pid_utils.sh

mkdir -p $RUN_DIR
chown -R vcap:vcap $RUN_DIR

mkdir -p $LOG_DIR
chown -R vcap:vcap $LOG_DIR

<%
  require "shellwords"

  def esc(x)
    Shellwords.shellescape(x)
  end

  tsa_addrs = nil
  tsa_port = nil

  if_p("tsa.host", "tsa.port") do |host, port|
    tsa_addrs = ["#{host}:#{port}"]
  end

  if tsa_addrs.nil? && tsa_port.nil?
    tsa = link("tsa")
    tsa_port = tsa.p("bind_port")
    tsa_addrs = tsa.instances.collect{|instance| "#{instance.address}:#{tsa_port}"}
  end

  garden_addr = ""

  if_p("garden.address") do |addr|
    garden_addr = addr
  end

  if garden_addr.empty?
    if_link("garden") do |garden|
      instance = garden.instances.find { |i| i.id == spec.id }
      if instance
        garden_addr = "#{instance.address}:#{garden.p("bind_port")}"
      end
    end
  end

  if garden_addr.empty?
    # no property and no link; assume it's colocated
    garden_addr = "#{spec.address}:7777"
  end

  baggageclaim_url = ""

  if_p("baggageclaim.url") do |url|
    baggageclaim_url = url
  end

  if baggageclaim_url.empty?
    if_link("baggageclaim") do |baggageclaim|
      instance = baggageclaim.instances.find { |i| i.id == spec.id }
      if instance
        baggageclaim_url = "http://#{instance.address}:#{baggageclaim.p("bind_port")}"
      end
    end
  end

  name_prefix = spec.id.split("-")[0]
 %>

WORKER_KEY=/var/vcap/jobs/groundcrew/config/worker_key
chown vcap:vcap $WORKER_KEY
chmod 0400 $WORKER_KEY

TSA_HOST_KEY=/var/vcap/jobs/groundcrew/config/tsa_host_key.pub
chown vcap:vcap $TSA_HOST_KEY
chmod 0400 $TSA_HOST_KEY

kill_session_siblings_of() {
  pidfile=$1

  if [ -f "$pidfile" ]; then
    pid=$(head -1 "$pidfile")

    session=$(ps -p $pid -o sid=)
    ps -s $session -o pid:1= | xargs kill

    rm -f $pidfile
  else
    echo "Pidfile $pidfile doesn't exist!"
  fi
}

case $1 in

  start)
    pid_guard $PIDFILE "beacon"

    echo $$ > $PIDFILE

    WORKER_VERSION=$(cat /var/vcap/packages/worker_version/version)

    cat /var/vcap/jobs/groundcrew/config/worker.json | \
      sed -e "s/HOSTNAME_REPLACE_ME/$(hostname | cut -d '-' -f 2-)/g" | \
      sed -e 's/"START_TIME_REPLACE_ME"/'$(date +%s)'/g' | \
      sed -e "s/WORKER_VERSION_REPLACE_ME/${WORKER_VERSION}/g" | \
      /var/vcap/packages/resource_discovery/bin/resource_discovery /var/vcap/packages/*/resource_metadata.json > \
      $RUN_DIR/worker.json

    tsa_addrs=(<%= tsa_addrs.join(" ") %>)

    chpst -u vcap:vcap /var/vcap/packages/worker/bin/worker \
           --name=$name_prefix-$(hostname | cut -d '-' -f 2-) \
           --version=$WORKER_VERSION \
           --start_time='$(date +%s)' \
           --team=<%= p("team") %> \
           --platform=<%= p("platform") %> \
           --tags=<%= p("tags") %> \
           --addr=$garden_addr \
           --baggageclaim_url=$baggageclaim_url \
           --resources=<%= p("additional_resource_types") %> \
           <% tsa_addrs.each do | tsa_addr | %> \
             --tsa-host=<%= tsa_addr %> \
           <% end %> \
           --tsa-public-key=${TSA_HOST_KEY} \
           --tsa-worker-private-key=${WORKER_KEY} \
           --tsa-retry \
           <% if p("garden.forward_address", nil) %> \
             --tsa-garden-forward-addr=<%= p("garden.forward_address") %> \
             <% if p("baggageclaim.forward_address", nil) %> \
               --tsa-baggageclaim-forward-addr=<%= p("baggageclaim.forward_address") %> \
             <% end %> \
           <% end %> \
            1>>$LOG_DIR/beacon.stdout.log \
            2>>$LOG_DIR/beacon.stderr.log || exitstatus=$?

    ;;

  stop)
    kill_session_siblings_of $PIDFILE

    ;;

  *)
    echo "Usage: $0 {start|stop}"

    ;;

esac
